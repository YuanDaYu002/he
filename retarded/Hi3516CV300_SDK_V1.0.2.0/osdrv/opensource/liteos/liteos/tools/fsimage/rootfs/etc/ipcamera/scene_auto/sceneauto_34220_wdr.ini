[common]
IspDev = 0
ViDev = 0
ViChn = 0
VpssGrp = 0
VpssChn = 0
VencGrp = 0
VencChn = 0

HLC_AutoEnable = 0;
HLC_thr_off = 140000		;强光场景关闭阈值	参数未测
HLC_thr_on = 150000		;强光场景打开阈值
HLC_tolerance = 3000		;
HLC_expthr = 6000
HLC_count = 5

ave_lum_thresh = 30
delta_dis_expthresh = 20
dci_strength_lut = 32,33,33,34,34,35,35,36,37,37,38,38,39,39,40,40,41,42,42,43,43,44,44,45,46,46,47,47,48,48,49,49,50,50,50,49,49,49,49,48,48,48,48,48,47,47,47,47,46,46,46,46,46,45,45,45,45,44,44,44,44,43,43,43,43,43,42,42,42,42,41,41,41,41,41,40,40,40,40,39,39,39,39,39,38,38,38,38,37,37,37,37,37,36,36,36,36,35,35,35,35,34,34,34,34,34,33,33,33,33,32  

exposure_thr_indoor = 10000		;后续去掉
exposure_thr_outdoor = 100

fpn_exp_thresh = 2000000000		;fpn打开阈值，34220sensor不需要

u32DRCStrengthThresh = 40

[AE]
aeBitrateCount = 3		;码率等级个数
aeBitrateThresh = 2048|8120|16318|		;码率等级阈值

;speed,tolerance,BlackDelayFrame,WhiteDelayFrame根据码率等级联动
u8Speed_0 = 64
u8Tolerance_0 = 3
u16BlackDelayFrame_0 = 25
u16WhiteDelayFrame_0 = 15
u32SysGainMax_0 = 16385000

u8Speed_1 = 64
u8Tolerance_1 = 3
u16BlackDelayFrame_1 = 15
u16WhiteDelayFrame_1 = 10
u32SysGainMax_1 = 16385000

u8Speed_2 = 64
u8Tolerance_2 = 2
u16BlackDelayFrame_2 = 0
u16WhiteDelayFrame_2 = 0
u32SysGainMax_2 = 16385000

aeExpCount = 5			;曝光等级个数
aeExpDtoLThresh = 6000|30000|240000|800000|8000000| 	;曝光等级暗到亮阈值
aeExpLtoDThresh = 8000|40000|300000|1000000|10000000|	;曝光等级亮到暗阈值

;Compesation，HistOffset根据曝光等级联动
aeCompesation = 64|64|64|64|64|
aeHistOffset = 128|128|128|128|128|

[nrprofile]
nplut_default_1 = 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,7,10,13,15,18,21,23,26,29,31,34,37,39,42,45
nplut_default_2 = 3,12,16,20,22,25,26,28,29,30,32,33,34,34,35,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,50,51,51,51,51,51,52,52,52,52,52,52,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59

nplut_1 = 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,7,10,13,15,18,21,23,26,29,31,34,37,39,42,45
nplut_2 = 3,12,16,20,22,25,26,28,29,30,32,33,34,34,35,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,50,51,51,51,51,51,52,52,52,52,52,52,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59

explow = 5000
exphigh = 16000

[demosaic]
BitrateCount = 2												
BitrateThresh = 2048|4096|
ExpCount = 8										
ExpThresh = 800|1200|1600|2400|3200|4000|6000|9000|

UuSlpoe_0 = 128|128|128|128|128|128|128|128|
AaSlope_0 = 170|170|170|170|170|170|170|170|
VaSlope_0 = 168|168|168|168|168|168|168|168|
VhSlope_0 = 170|170|170|170|170|170|170|170|

UuSlpoe_1 = 168|168|168|168|168|168|168|168|
AaSlope_1 = 200|200|200|200|200|200|200|200|
VaSlope_1 = 185|185|185|185|185|185|185|185|
VhSlope_1 = 220|220|220|220|220|220|220|220|

[sharpen]
sharpenBitrateCount = 3
sharpenBitrateThresh = 1024|2048|4096|

SharpenD_0 = 64|64|64|64|56|48|44|40|32|32|32|32|32|32|32|32|			;对应16个等级ISO的sharpen值
SharpenRGB_0 = 96|96|96|96|80|64|48|32|32|32|32|32|32|32|32|32|32|
SharpenUd_0 = 96|96|96|96|80|64|48|32|16|16|16|16|16|16|16|16|			;对应第一码率等级

SharpenD_1 = 64|64|64|64|56|48|44|40|32|32|32|32|32|32|32|32|				;对应第二码率等级
SharpenRGB_1 = 96|96|96|96|80|64|48|32|32|32|32|32|32|32|32|32|32|
SharpenUd_1 = 96|96|96|96|80|64|48|32|16|16|16|16|16|16|16|16|	

SharpenD_2 = 64|64|64|64|56|48|44|40|32|32|32|32|32|32|32|32|			;对应第三码率等级
SharpenRGB_2 = 96|96|96|96|80|64|48|32|32|32|32|32|32|32|32|32|32|
SharpenUd_2 = 96|96|96|96|80|64|48|32|16|16|16|16|16|16|16|16|

[dp]
ExpCount = 12		;曝光等级个数
ExpThresh = 20000|40000|160000|320000|640000|1280000|2560000|4800000|9600000|18000000|34000000|72000000|	;曝光量，单位增益*时间(微秒)

u16Slop = 0|0|0|32|64|128|256|384|512|512|512|512|

[gamma]
ExpCount = 2
ExpThresh = 3200|6400|

gamma.0_0 = 0,1,2,4,8,12,17,23,30,38,47,57,68,79,92,105,120,133,147,161,176,192,209,226,243,260,278,296,317,340,365,390,416,440,466,491,517,538,561,584,607,631,656,680,705,730,756,784,812,835,858,882,908,934,958,982,1008,1036,1064,1092,1119,1143,1167,1192,1218,1243,1269,1296,1323,1351,1379,1408,1434,1457,1481,1507,1531,1554,1579,1603,1628,1656,1683,1708,1732,1756,1780,1804,1829,1854,
gamma.1_0 = 1877,1901,1926,1952,1979,2003,2024,2042,2062,2084,2106,2128,2147,2168,2191,2214,2233,2256,2278,2296,2314,2335,2352,2373,2391,2412,2431,2451,2472,2492,2513,2531,2547,2566,2581,2601,2616,2632,2652,2668,2688,2705,2721,2742,2759,2779,2796,2812,2826,2842,2857,2872,2888,2903,2920,2934,2951,2967,2983,3000,3015,3033,3048,3065,3080,3091,3105,3118,3130,3145,3156,3171,3184,3197,3213,3224,3240,3252,3267,3281,3295,3310,3323,3335,3347,3361,3372,3383,3397,3409,
gamma.2_0 = 3421,3432,3447,3459,3470,3482,3497,3509,3521,3534,3548,3560,3572,3580,3592,3602,3613,3625,3633,3646,3657,3667,3679,3688,3701,3709,3719,3727,3736,3745,3754,3764,3773,3781,3791,3798,3806,3816,3823,3833,3840,3847,3858,3865,3872,3879,3888,3897,3904,3911,3919,3926,3933,3940,3948,3955,3962,3970,3973,3981,3988,3996,4003,4011,4018,4026,4032,4037,4045,4053,4057,4064,4072,4076,4084,4088,4095

gamma.0_1 = 0,1,2,4,8,12,17,23,30,38,47,57,68,79,92,105,120,133,147,161,176,192,209,226,243,260,278,296,317,340,365,390,416,440,466,491,517,538,561,584,607,631,656,680,705,730,756,784,812,835,858,882,908,934,958,982,1008,1036,1064,1092,1119,1143,1167,1192,1218,1243,1269,1296,1323,1351,1379,1408,1434,1457,1481,1507,1531,1554,1579,1603,1628,1656,1683,1708,1732,1756,1780,1804,1829,1854,
gamma.1_1 = 1877,1901,1926,1952,1979,2003,2024,2042,2062,2084,2106,2128,2147,2168,2191,2214,2233,2256,2278,2296,2314,2335,2352,2373,2391,2412,2431,2451,2472,2492,2513,2531,2547,2566,2581,2601,2616,2632,2652,2668,2688,2705,2721,2742,2759,2779,2796,2812,2826,2842,2857,2872,2888,2903,2920,2934,2951,2967,2983,3000,3015,3033,3048,3065,3080,3091,3105,3118,3130,3145,3156,3171,3184,3197,3213,3224,3240,3252,3267,3281,3295,3310,3323,3335,3347,3361,3372,3383,3397,3409,
gamma.2_1 = 3421,3432,3447,3459,3470,3482,3497,3509,3521,3534,3548,3560,3572,3580,3592,3602,3613,3625,3633,3646,3657,3667,3679,3688,3701,3709,3719,3727,3736,3745,3754,3764,3773,3781,3791,3798,3806,3816,3823,3833,3840,3847,3858,3865,3872,3879,3888,3897,3904,3911,3919,3926,3933,3940,3948,3955,3962,3970,3973,3981,3988,3996,4003,4011,4018,4026,4032,4037,4045,4053,4057,4064,4072,4076,4084,4088,4095

[ccm]
AcmEnable = 0
u16HighColorTempAcmOn = 4900
u16MidColorTempAcmOn = 3850
u16LowColorTempAcmOn = 2650
au16HighCCMAcmOn = 396|32910|2|32857|443|32866|22|33081|547|
au16MidCCMAcmOn = 411|32941|18|32868|410|32823|42|33121|566|
au16LowCCMAcmOn = 438|32855|32863|32877|461|32864|0|33061|549|

u16HighColorTempAcmOff = 4900
u16MidColorTempAcmOff = 3850
u16LowColorTempAcmOff = 2650
au16HighCCMAcmOff = 396|32910|2|32857|443|32866|22|33081|547|
au16MidCCMAcmOff = 411|32941|18|32868|410|32823|42|33121|566|
au16LowCCMAcmOff = 438|32855|32863|32877|461|32864|0|33061|549|

[h264venc]
vencBitrateCount = 4
vencBitrateThresh = 1025|2049|4097|8145|

chroma_qp_index_offset_0 = 0
disable_deblocking_filter_idc_0 = 2
u32DeltaQP_0 = 0
s32IPQPDelta_0 = 4
slice_alpha_c0_offset_div2_0 = 5
slice_beta_offset_div2_0 = 5
ThreshI_0 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_0 = 7|7|7|7|7|9|9|9|12|15|18|25|

chroma_qp_index_offset_1 = -6
disable_deblocking_filter_idc_1 = 2
u32DeltaQP_1 = 1
s32IPQPDelta_1 = 4
slice_alpha_c0_offset_div2_1 = 5
slice_beta_offset_div2_1 = 5
ThreshI_1 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_1 = 7|7|7|7|7|9|9|9|12|15|18|25|

chroma_qp_index_offset_2 = -4
disable_deblocking_filter_idc_2 = 2
u32DeltaQP_2 = 0
s32IPQPDelta_2 = 4
slice_alpha_c0_offset_div2_2 = 1
slice_beta_offset_div2_2 = 1
ThreshI_2 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_2 = 7|7|7|7|7|9|9|9|12|15|18|25|

chroma_qp_index_offset_3 = 0
disable_deblocking_filter_idc_3 = 1
u32DeltaQP_3 = 0
s32IPQPDelta_3 = 2
slice_alpha_c0_offset_div2_3 = 0
slice_beta_offset_div2_3 = 0
ThreshI_3 = 7|7|7|7|7|9|9|9|12|15|18|25|
ThreshP_3 = 7|7|7|7|7|9|9|9|12|15|18|25|

[h265venc]
vencBitrateCount = 2
vencBitrateThresh = 2048|4098|

ThreshI_0 = 3|3|5|5|10|10|15|15|20|25|35|40|
ThreshP_0 = 3|3|5|5|10|10|15|15|20|25|35|40|
u32RowQpDelta_0 = 1
s32IPQPDelta_0 = 3

ThreshI_1 = 3|3|5|5|10|10|15|15|20|25|35|40|
ThreshP_1 = 3|3|5|5|10|10|15|15|20|25|35|40|
u32RowQpDelta_1 = 1
s32IPQPDelta_1 = 3

;以下参数与码率、曝光量都相关
ExpCount = 2		
ExpThresh = 8000|300000|
;I帧intra模式倾向性选择
u8NormIntra4RdCost_I_0 = 0|10|
u8NormIntra8RdCost_I_0 = 0|0|
u8NormIntra16RdCost_I_0 = 0|0|
u8NormIntra32RdCost_I_0 = 0|0|
u8SkinIntra4RdCost_I_0 = 0|0|
u8SkinIntra8RdCost_I_0 = 0|0|
u8SkinIntra16RdCost_I_0 = 2|2|
u8SkinIntra32RdCost_I_0 = 1|1|
u8HedgeIntra4RdCost_I_0 = 0|3|
u8HedgeIntra8RdCost_I_0 = 3|0|
u8HedgeIntra16RdCost_I_0 = 1|0|
u8HedgeIntra32RdCost_I_0 = 15|0|
;P帧intra模式倾向性选择
u8NormIntra4RdCost_P_0 = 0|0|
u8NormIntra8RdCost_P_0 = 0|1|
u8NormIntra16RdCost_P_0 = 0|15|
u8NormIntra32RdCost_P_0 = 0|15|
u8SkinIntra4RdCost_P_0 = 0|0|
u8SkinIntra8RdCost_P_0 = 0|0|
u8SkinIntra16RdCost_P_0 = 2|2|
u8SkinIntra32RdCost_P_0 = 1|1|
u8HedgeIntra4RdCost_P_0 = 0|0|
u8HedgeIntra8RdCost_P_0 = 3|1|
u8HedgeIntra16RdCost_P_0 = 1|15|
u8HedgeIntra32RdCost_P_0 = 15|15|
;P帧FME模式倾向性选择
u8NormFme8RdCost_P_0 = 4|4|
u8NormFme16RdCost_P_0 = 0|0|
u8NormFme32RdCost_P_0 = 0|0|
u8NormFme64RdCost_P_0 = 0|0|
u8SkinFme8RdCost_P_0 = 0|0|
u8SkinFme16RdCost_P_0 = 0|0|
u8SkinFme32RdCost_P_0 = 4|4|
u8SkinFme64RdCost_P_0 = 2|2|
u8HedgeFme8RdCost_P_0 = 4|0|
u8HedgeFme16RdCost_P_0 = 4|0|
u8HedgeFme32RdCost_P_0 = 3|1|
u8HedgeFme64RdCost_P_0 = 2|1|
;P帧MERGE模式倾向性选择
u8NormMerg8RdCost_P_0 = 4|4|
u8NormMerg16RdCost_P_0 = 0|0|
u8NormMerg32RdCost_P_0 = 0|0|
u8NormMerg64RdCost_P_0 = 0|0|
u8SkinMerg8RdCost_P_0 = 0|0|
u8SkinMerg16RdCost_P_0 = 0|0|
u8SkinMerg32RdCost_P_0 = 4|4|
u8SkinMerg64RdCost_P_0 = 2|2|
u8HedgeMerg8RdCost_P_0 = 4|0|
u8HedgeMerg16RdCost_P_0 = 4|0|
u8HedgeMerg32RdCost_P_0 = 3|1|
u8HedgeMerg64RdCost_P_0 = 2|1|
;I帧肤色算法检测
bSkinEn_I_0 = 1|0|
u32SkinQpDelta_I_0 = 3|3|
u8SkinUMax_I_0 = 100|100|
u8SkinUMin_I_0 = 127|127|
u8SkinVMax_I_0 = 135|135|
u8SkinVMin_I_0 = 160|160|
u32SkinNum_I_0 = 200|200|
;P帧肤色算法检测
bSkinEn_P_0 = 1|0|
u32SkinQpDelta_P_0 = 3|3|
u8SkinUMax_P_0 = 100|100|
u8SkinUMin_P_0 = 127|127|
u8SkinVMax_P_0 = 135|135|
u8SkinVMin_P_0 = 160|160|
u32SkinNum_P_0 = 200|200|
;I帧强边缘检测算法
u8HedgeThr_I_0 = 25|25|
u8HedgeCnt_I_0 = 4|4|
bStroEdgeEn_I_0 = 1|1|
u32StroEdgeQpDelta_I_0 = 0|0|
;P帧强边缘检测算法
u8HedgeThr_P_0 = 25|25|
u8HedgeCnt_P_0 = 4|4|
bStroEdgeEn_P_0 = 1|1|
u32StroEdgeQpDelta_P_0 = 4|4|
;I帧DCT ROUNDING算法
bImproveEn_I_0 = 0|0|
;P帧DCT ROUNDING算法
bImproveEn_P_0 = 1|1|
u32Norm32MaxNum_P_0 = 4|4|
u32Norm16MaxNum_P_0 = 3|3|
u32Norm32ProtectNum_P_0 = 256|256|
u32Norm16ProtectNum_P_0 = 64|64|
u32Skin32MaxNum_P_0 = 8|8|
u32Skin16MaxNum_P_0 = 6|6|
u32Skin32ProtectNum_P_0 = 32|32|
u32Skin16ProtectNum_P_0 = 16|16|
u32Still32MaxNum_P_0 = 8|8|
u32Still16MaxNum_P_0 = 6|6|
u32Still32ProtectNum_P_0 = 16|16|
u32Still16ProtectNum_P_0 = 8|8|
u32Hedge32MaxNum_P_0 = 8|8|
u32Hedge16MaxNum_P_0 = 6|6|
u32Hedge32ProtectNum_P_0 = 32|32|
u32Hedge16ProtectNum_P_0 = 16|16|

;I帧intra模式倾向性选择
u8NormIntra4RdCost_I_1 = 0|10|
u8NormIntra8RdCost_I_1 = 0|0|
u8NormIntra16RdCost_I_1 = 0|0|
u8NormIntra32RdCost_I_1 = 0|0|
u8SkinIntra4RdCost_I_1 = 0|0|
u8SkinIntra8RdCost_I_1 = 0|0|
u8SkinIntra16RdCost_I_1 = 2|2|
u8SkinIntra32RdCost_I_1 = 1|1|
u8HedgeIntra4RdCost_I_1 = 0|3|
u8HedgeIntra8RdCost_I_1 = 3|0|
u8HedgeIntra16RdCost_I_1 = 1|0|
u8HedgeIntra32RdCost_I_1 = 15|0|
;P帧intra模式倾向性选择
u8NormIntra4RdCost_P_1 = 0|0|
u8NormIntra8RdCost_P_1 = 0|1|
u8NormIntra16RdCost_P_1 = 0|15|
u8NormIntra32RdCost_P_1 = 0|15|
u8SkinIntra4RdCost_P_1 = 0|0|
u8SkinIntra8RdCost_P_1 = 0|0|
u8SkinIntra16RdCost_P_1 = 2|2|
u8SkinIntra32RdCost_P_1 = 1|1|
u8HedgeIntra4RdCost_P_1 = 0|0|
u8HedgeIntra8RdCost_P_1 = 1|3|
u8HedgeIntra16RdCost_P_1 = 15|1|
u8HedgeIntra32RdCost_P_1 = 15|15|
;P帧FME模式倾向性选择
u8NormFme8RdCost_P_1 = 4|4|
u8NormFme16RdCost_P_1 = 0|0|
u8NormFme32RdCost_P_1 = 0|0|
u8NormFme64RdCost_P_1 = 0|0|
u8SkinFme8RdCost_P_1 = 0|0|
u8SkinFme16RdCost_P_1 = 0|0|
u8SkinFme32RdCost_P_1 = 4|4|
u8SkinFme64RdCost_P_1 = 2|2|
u8HedgeFme8RdCost_P_1 = 4|0|
u8HedgeFme16RdCost_P_1 = 4|0|
u8HedgeFme32RdCost_P_1 = 3|1|
u8HedgeFme64RdCost_P_1 = 2|1|
;P帧MERGE模式倾向性选择
u8NormMerg8RdCost_P_1 = 4|4|
u8NormMerg16RdCost_P_1 = 0|0|
u8NormMerg32RdCost_P_1 = 0|0|
u8NormMerg64RdCost_P_1 = 0|0|
u8SkinMerg8RdCost_P_1 = 0|0|
u8SkinMerg16RdCost_P_1 = 0|0|
u8SkinMerg32RdCost_P_1 = 4|4|
u8SkinMerg64RdCost_P_1 = 2|2|
u8HedgeMerg8RdCost_P_1 = 4|0|
u8HedgeMerg16RdCost_P_1 = 4|0|
u8HedgeMerg32RdCost_P_1 = 3|1|
u8HedgeMerg64RdCost_P_1 = 2|1|
;I帧肤色算法检测
bSkinEn_I_1 = 1|0|
u32SkinQpDelta_I_1 = 3|3|
u8SkinUMax_I_1 = 100|100|
u8SkinUMin_I_1 = 127|127|
u8SkinVMax_I_1 = 135|135|
u8SkinVMin_I_1 = 160|160|
u32SkinNum_I_1 = 200|200|
;P帧肤色算法检测
bSkinEn_P_1 = 1|0|
u32SkinQpDelta_P_1 = 3|3|
u8SkinUMax_P_1 = 100|100|
u8SkinUMin_P_1 = 127|127|
u8SkinVMax_P_1 = 135|135|
u8SkinVMin_P_1 = 160|160|
u32SkinNum_P_1 = 200|200|
;I帧强边缘检测算法
u8HedgeThr_I_1 = 25|25|
u8HedgeCnt_I_1 = 4|4|
bStroEdgeEn_I_1 = 1|1|
u32StroEdgeQpDelta_I_1 = 0|0|
;P帧强边缘检测算法
u8HedgeThr_P_1 = 25|25|
u8HedgeCnt_P_1 = 4|4|
bStroEdgeEn_P_1 = 1|1|
u32StroEdgeQpDelta_P_1 = 4|4|
;I帧DCT ROUNDING算法
bImproveEn_I_1 = 0|0|
;P帧DCT ROUNDING算法
bImproveEn_P_1 = 1|1|
u32Norm32MaxNum_P_1 = 4|4|
u32Norm16MaxNum_P_1 = 3|3|
u32Norm32ProtectNum_P_1 = 256|256|
u32Norm16ProtectNum_P_1 = 64|64|
u32Skin32MaxNum_P_1 = 8|8|
u32Skin16MaxNum_P_1 = 6|6|
u32Skin32ProtectNum_P_1 = 32|32|
u32Skin16ProtectNum_P_1 = 16|16|
u32Still32MaxNum_P_1 = 8|8|
u32Still16MaxNum_P_1 = 6|6|
u32Still32ProtectNum_P_1 = 16|16|
u32Still16ProtectNum_P_1 = 8|8|
u32Hedge32MaxNum_P_1 = 8|8|
u32Hedge16MaxNum_P_1 = 6|6|
u32Hedge32ProtectNum_P_1 = 32|32|
u32Hedge16ProtectNum_P_1 = 16|16|

[3dnr]
datafile=/etc/ipcamera/scene_auto/iso_34220_3dnr.bin
irdatafile=/etc/ipcamera/scene_auto/iso_34220_3dnr.bin
hlcdatafile=/etc/ipcamera/scene_auto/iso_34220_3dnr.bin

hlctimes = 2048		;1024对应1倍，2048对应2倍，依次类推
drctimes = 2048
irtimes = 2048

3dnrExpCount = 12
3dnrExpThresh = 100|100|400|800|1600|3200|6400|12000|24000|45000|85000|180000|	;曝光量，单位增益*时间(微秒)

SHP0_0 = 85
SHP1_0 = 64
SHP2_0 = 64
MDDZ0_0 = 127
MDDZ1_0 = 6
MDDZ2_0 = 127
TFS0_0 = 10
TFS1_0 = 10
TFS2_0 = 10
SFS0_0 = 512
SFS1_0 = 256
SFS2_0 = 64
TFP0_0 = 100
TFP1_0 = 100
TFP2_0 = 100
SPS0_0 = 8
SPS1_0 = 8
SPS2_0 = 8
TFR0_0 = 0
TFR1_0 = 6
TFR2_0 = 16
SPT0_0 = 10
SPT1_0 = 10
SPT2_0 = 10
SBF0_0 = 64
SBF1_0 = 32
SBF2_0 = 0
SFC_0 = 0
TFC_0 = 0 
Mdn_0 = 0
MATH_0 = 36
MATW_0 = 28

SHP0_1 = 85
SHP1_1 = 64
SHP2_1 = 64
MDDZ0_1 = 127
MDDZ1_1 = 6
MDDZ2_1 = 127
TFS0_1 = 10
TFS1_1 = 10
TFS2_1 = 10
SFS0_1 = 512
SFS1_1 = 256
SFS2_1 = 64
TFP0_1 = 100
TFP1_1 = 100
TFP2_1 = 100
SPS0_1 = 8
SPS1_1 = 8
SPS2_1 = 8
TFR0_1 = 0
TFR1_1 = 6
TFR2_1 = 16
SPT0_1 = 10
SPT1_1 = 10
SPT2_1 = 10
SBF0_1 = 64
SBF1_1 = 32
SBF2_1 = 0
SFC_1 = 0
TFC_1 = 0 
Mdn_1 = 0
MATH_1 = 36
MATW_1 = 28

SHP0_2 = 75
SHP1_2 = 64
SHP2_2 = 64
MDDZ0_2 = 127
MDDZ1_2 = 6
MDDZ2_2 = 127
TFS0_2 = 10
TFS1_2 = 10
TFS2_2 = 10
SFS0_2 = 512
SFS1_2 = 256
SFS2_2 = 96
TFP0_2 = 100
TFP1_2 = 500
TFP2_2 = 500
SPS0_2 = 8
SPS1_2 = 12
SPS2_2 = 12
TFR0_2 = 0
TFR1_2 = 6
TFR2_2 = 31
SPT0_2 = 10
SPT1_2 = 10
SPT2_2 = 10
SBF0_2 = 64
SBF1_2 = 32
SBF2_2 = 0
SFC_2 = 0
TFC_2 = 0 
Mdn_2 = 0
MATH_2 = 64
MATW_2 = 24

SHP0_3 = 70
SHP1_3 = 64
SHP2_3 = 64
MDDZ0_3 = 127
MDDZ1_3 = 6
MDDZ2_3 = 127
TFS0_3 = 10
TFS1_3 = 10
TFS2_3 = 9
SFS0_3 = 512
SFS1_3 = 384
SFS2_3 = 192
TFP0_3 = 100
TFP1_3 = 500
TFP2_3 = 500
SPS0_3 = 8
SPS1_3 = 12
SPS2_3 = 12
TFR0_3 = 0
TFR1_3 = 6
TFR2_3 = 31
SPT0_3 = 10
SPT1_3 = 10
SPT2_3 = 9
SBF0_3 = 64
SBF1_3 = 32
SBF2_3 = 0
SFC_3 = 16
TFC_3 = 0 
Mdn_3 = 0
MATH_3 = 64
MATW_3 = 28

SHP0_4 = 80
SHP1_4 = 48
SHP2_4 = 32
MDDZ0_4 = 127
MDDZ1_4 = 6
MDDZ2_4 = 127
TFS0_4 = 14
TFS1_4 = 12
TFS2_4 = 12
SFS0_4 = 1048
SFS1_4 = 512
SFS2_4 = 256
TFP0_4 = 100
TFP1_4 = 500
TFP2_4 = 500
SPS0_4 = 16
SPS1_4 = 16
SPS2_4 = 16
TFR0_4 = 0
TFR1_4 = 6
TFR2_4 = 8
SPT0_4 = 14
SPT1_4 = 12
SPT2_4 = 12
SBF0_4 = 64
SBF1_4 = 0
SBF2_4 = 0
SFC_4 = 16
TFC_4 = 0 
Mdn_4 = 0
MATH_4 = 64
MATW_4 = 28

SHP0_5 = 80
SHP1_5 = 48
SHP2_5 = 32
MDDZ0_5 = 127
MDDZ1_5 = 6
MDDZ2_5 = 127
TFS0_5 = 14
TFS1_5 = 12
TFS2_5 = 12
SFS0_5 = 1048
SFS1_5 = 512
SFS2_5 = 256
TFP0_5 = 0
TFP1_5 = 500
TFP2_5 = 500
SPS0_5 = 16
SPS1_5 = 16
SPS2_5 = 16
TFR0_5 = 8
TFR1_5 = 6
TFR2_5 = 16
SPT0_5 = 0
SPT1_5 = 0
SPT2_5 = 0
SBF0_5 = 64
SBF1_5 = 0
SBF2_5 = 0
SFC_5 = 32
TFC_5 = 0 
Mdn_5 = 0
MATH_5 = 96
MATW_5 = 28

SHP0_6 = 80
SHP1_6 = 48
SHP2_6 = 32
MDDZ0_6 = 127
MDDZ1_6 = 6
MDDZ2_6 = 127
TFS0_6 = 14
TFS1_6 = 9
TFS2_6 = 9
SFS0_6 = 1048
SFS1_6 = 1024
SFS2_6 = 512
TFP0_6 = 0
TFP1_6 = 500
TFP2_6 = 500
SPS0_6 = 16
SPS1_6 = 16
SPS2_6 = 8
TFR0_6 = 8
TFR1_6 = 6
TFR2_6 = 16
SPT0_6 = 0
SPT1_6 = 0
SPT2_6 = 16
SBF0_6 = 64
SBF1_6 = 0
SBF2_6 = 0
SFC_6 = 16
TFC_6 = 0 
Mdn_6 = 0
MATH_6 = 128
MATW_6 = 24

SHP0_7 = 80
SHP1_7 = 64
SHP2_7 = 64
MDDZ0_7 = 12
MDDZ1_7 = 12
MDDZ2_7 = 127
TFS0_7 = 12
TFS1_7 = 10
TFS2_7 = 10
SFS0_7 = 768
SFS1_7 = 768
SFS2_7 = 384
TFP0_7 = 0
TFP1_7 = 400
TFP2_7 = 500
SPS0_7 = 8
SPS1_7 = 16
SPS2_7 = 16
TFR0_7 = 8
TFR1_7 = 14
TFR2_7 = 16
SPT0_7 = 16
SPT1_7 = 0
SPT2_7 = 0
SBF0_7 = 96
SBF1_7 = 32
SBF2_7 = 0
SFC_7 = 32
TFC_7 = 8 
Mdn_7 = 0
MATH_7 = 128
MATW_7 = 24

SHP0_8 = 80
SHP1_8 = 64
SHP2_8 = 64
MDDZ0_8 = 12
MDDZ1_8 = 12
MDDZ2_8 = 127
TFS0_8 = 12
TFS1_8 = 10
TFS2_8 = 10
SFS0_8 = 9999
SFS1_8 = 768
SFS2_8 = 384
TFP0_8 = 0
TFP1_8 = 400
TFP2_8 = 500
SPS0_8 = 8
SPS1_8 = 16
SPS2_8 = 16
TFR0_8 = 8
TFR1_8 = 14
TFR2_8 = 16
SPT0_8 = 16
SPT1_8 = 0
SPT2_8 = 0
SBF0_8 = 96
SBF1_8 = 32
SBF2_8 = 0
SFC_8 = 64
TFC_8 = 16 
Mdn_8 = 0
MATH_8 = 128
MATW_8 = 24

SHP0_9 = 80
SHP1_9 = 48
SHP2_9 = 32
MDDZ0_9 = 12
MDDZ1_9 = 12
MDDZ2_9 = 127
TFS0_9 = 12
TFS1_9 = 12
TFS2_9 = 10
SFS0_9 = 9999
SFS1_9 = 1024
SFS2_9 = 512
TFP0_9 = 200
TFP1_9 = 500
TFP2_9 = 500
SPS0_9 = 8
SPS1_9 = 16
SPS2_9 = 16
TFR0_9 = 14
TFR1_9 = 12
TFR2_9 = 31
SPT0_9 = 16
SPT1_9 = 0
SPT2_9 = 0
SBF0_9 = 96
SBF1_9 = 0
SBF2_9 = 0
SFC_9 = 64
TFC_9 = 16 
Mdn_9 = 0
MATH_9 = 256
MATW_9 = 24

SHP0_10 = 96
SHP1_10 = 48
SHP2_10 = 32
MDDZ0_10 = 127
MDDZ1_10 = 24
MDDZ2_10 = 127
TFS0_10 = 12
TFS1_10 = 10
TFS2_10 = 8
SFS0_10 = 9999
SFS1_10 = 1024
SFS2_10 = 512
TFP0_10 = 200
TFP1_10 = 500
TFP2_10 = 500
SPS0_10 = 7
SPS1_10 = 16
SPS2_10 = 16
TFR0_10 = 16
TFR1_10 = 6
TFR2_10 = 31
SPT0_10 = 16
SPT1_10 = 0
SPT2_10 = 0
SBF0_10 = 96
SBF1_10 = 96
SBF2_10 = 0
SFC_10 = 64
TFC_10 = 16 
Mdn_10 = 0
MATH_10 = 256
MATW_10 = 24

SHP0_11 = 96
SHP1_11 = 48
SHP2_11 = 32
MDDZ0_11 = 24
MDDZ1_11 = 24
MDDZ2_11 = 127
TFS0_11 = 12
TFS1_11 = 10
TFS2_11 = 8
SFS0_11 = 9999
SFS1_11 = 1024
SFS2_11 = 512
TFP0_11 = 500
TFP1_11 = 500
TFP2_11 = 500
SPS0_11 = 7
SPS1_11 = 8
SPS2_11 = 16
TFR0_11 = 9
TFR1_11 = 9
TFR2_11 = 31
SPT0_11 = 12
SPT1_11 = 10
SPT2_11 = 8
SBF0_11 = 64
SBF1_11 = 64
SBF2_11 = 0
SFC_11 = 128
TFC_11 = 16 
Mdn_11 = 8
MATH_11 = 256
MATW_11 = 24

[BLC]
AEStrategyMode = 1
HistRatioSlope = 32
MaxHistOffset = 64

[DYNAMIC]
TotalNum_normal = 7
TotalNum_fast = 7

IntTime_normal = 2|10400|10400|20000|20000|20000|20000|                ;25fps  
IntTime_fast = 2|10400|10400|20000|20000|20000|20000|                ;25fps  

SysGain_normal = 1024|1024|8134|8134|131071|131071|131071|                ;25fps  
SysGain_fast = 1024|1024|8134|8134|131071|131071|131071|                ;25fps  

[HLC]
DCIEnable = 0
DCIBlackGain = 32
DCIContrastGain = 32
DCILightGain = 32
DRCEnable = 1
DRCManulEnable = 1
DRCStrengthTarget = 128
ExpCompensation = 16
WhiteDelayFrame = 0
BlackDelayFrame = 0
u8Speed = 32
HistRatioSlope = 128
MaxHistOffset = 6
u8Tolerance = 6
Saturation = 120,116,104,96,88,80,72,64,56,56,56,56,56,56,56,56,
gamma_0 = 0,1,2,4,8,12,17,23,30,38,47,57,68,79,92,105,120,133,147,161,176,192,209,226,243,260,278,296,315,333,351,370,390,410,431,453,474,494,515,536,558,580,602,623,644,665,686,708,730,751,773,795,818,840,862,884,907,929,951,974,998,1024,1051,1073,1096,1117,1139,1159,1181,1202,1223,1243,1261,1275,1293,1313,1332,1351,1371,1389,1408,1427,1446,1464,1482,1499,1516,1533,1549,1567,1583,1600,1616,1633,1650,
gamma_1 = 1667,1683,1700,1716,1732,1749,1766,1782,1798,1815,1831,1847,1863,1880,1896,1912,1928,1945,1961,1977,1993,2009,2025,2041,2057,2073,2089,2104,2121,2137,2153,2168,2184,2200,2216,2231,2248,2263,2278,2294,2310,2326,2341,2357,2373,2388,2403,2419,2434,2450,2466,2481,2496,2512,2527,2543,2558,2573,2589,2604,2619,2635,2650,2665,2680,2696,2711,2726,2741,2757,2771,2787,2801,2817,2832,2847,2862,2877,2892,2907,2922,2937,2952,
gamma_2 = 2967,2982,2997,3012,3027,3041,3057,3071,3086,3101,3116,3130,3145,3160,3175,3190,3204,3219,3234,3248,3263,3278,3293,3307,3322,3337,3351,3365,3380,3394,3409,3424,3438,3453,3468,3482,3497,3511,3525,3540,3554,3569,3584,3598,3612,3626,3641,3655,3670,3684,3699,3713,3727,3742,3756,3770,3784,3799,3813,3827,3841,3856,3870,3884,3898,3912,3927,3941,3955,3969,3983,3997,4011,4026,4039,4054,4068,4082,4095

[IR]
ExpCompensation = 50
u16HistRatioSlope = 64
BlackDelayFrame = 30
WhiteDelayFrame = 30
MaxHistOffset = 20
u8Tolerance = 3
u8Speed = 16
DCIEnable = 1
DCIBlackGain = 32
DCIContrastGain = 32
DCILightGain = 32
IRu16Slope = 512
au8LumThresh = 96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
au8SharpenD = 112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
au8SharpenRGB = 112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
au8SharpenUd = 104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,
gamma_0 = 0,1,2,4,8,12,17,23,30,38,47,57,68,79,92,105,120,133,147,161,176,192,209,226,243,260,278,296,317,340,365,390,416,440,466,491,517,538,561,584,607,631,656,680,705,730,756,784,812,835,858,882,908,934,958,982,1008,1036,1064,1092,1119,1143,1167,1192,1218,1243,1269,1296,1323,1351,1379,1408,1434,1457,1481,1507,1531,1554,1579,1603,1628,1656,1683,1708,1732,1756,1780,1804,1829,1854,
gamma_1 = 1877,1901,1926,1952,1979,2003,2024,2042,2062,2084,2106,2128,2147,2168,2191,2214,2233,2256,2278,2296,2314,2335,2352,2373,2391,2412,2431,2451,2472,2492,2513,2531,2547,2566,2581,2601,2616,2632,2652,2668,2688,2705,2721,2742,2759,2779,2796,2812,2826,2842,2857,2872,2888,2903,2920,2934,2951,2967,2983,3000,3015,3033,3048,3065,3080,3091,3105,3118,3130,3145,3156,3171,3184,3197,3213,3224,3240,3252,3267,3281,3295,3310,3323,3335,3347,3361,3372,3383,3397,3409,
gamma_2 = 3421,3432,3447,3459,3470,3482,3497,3509,3521,3534,3548,3560,3572,3580,3592,3602,3613,3625,3633,3646,3657,3667,3679,3688,3701,3709,3719,3727,3736,3745,3754,3764,3773,3781,3791,3798,3806,3816,3823,3833,3840,3847,3858,3865,3872,3879,3888,3897,3904,3911,3919,3926,3933,3940,3948,3955,3962,3970,3973,3981,3988,3996,4003,4011,4018,4026,4032,4037,4045,4053,4057,4064,4072,4076,4084,4088,4095

[DRC]
DRCEnable = 1
DRCManulEnable = 1
DRCStrengthTarget = 128
DRCu32SlopeMax = 56
DRCu32SlopeMin = 192
DRCu32VarianceSpace = 10
DRCu32VarianceIntensity = 4
DRCu32WhiteLevel = 1791
DRCu32BlackLevel = 0

